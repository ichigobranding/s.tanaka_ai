[{"/Users/soichirotanaka 1/Documents/gauss/python/ FaceDetection/facemesh/src/index.js":"1","/Users/soichirotanaka 1/Documents/gauss/python/ FaceDetection/facemesh/src/App.js":"2","/Users/soichirotanaka 1/Documents/gauss/python/ FaceDetection/facemesh/src/reportWebVitals.js":"3","/Users/soichirotanaka 1/Documents/gauss/python/ FaceDetection/facemesh/src/utilities.js":"4"},{"size":500,"mtime":1610838932151,"results":"5","hashOfConfig":"6"},{"size":2951,"mtime":1607646164000,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1610838932157,"results":"8","hashOfConfig":"6"},{"size":24545,"mtime":1610917033565,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1vh3m3n",{"filePath":"13","messages":"14","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/soichirotanaka 1/Documents/gauss/python/ FaceDetection/facemesh/src/index.js",[],["20","21"],"/Users/soichirotanaka 1/Documents/gauss/python/ FaceDetection/facemesh/src/App.js",["22","23"],"// 1. Install dependencies DONE\n// 2. Import dependencies DONE\n// 3. Setup webcam and canvas DONE\n// 4. Define references to those DONE\n// 5. Load posenet DONE\n// 6. Detect function DONE\n// 7. Drawing utilities from tensorflow DONE\n// 8. Draw functions DONE\n\n// Face Mesh - https://github.com/tensorflow/tfjs-models/tree/master/facemesh\n\nimport React, { useRef, useEffect } from \"react\";\nimport \"./App.css\";\nimport * as tf from \"@tensorflow/tfjs\";\n// OLD MODEL\n//import * as facemesh from \"@tensorflow-models/facemesh\";\n\n// NEW MODEL\nimport * as facemesh from \"@tensorflow-models/face-landmarks-detection\";\nimport Webcam from \"react-webcam\";\nimport { drawMesh } from \"./utilities\";\n\nfunction App() {\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  //  Load posenet\n  const runFacemesh = async () => {\n    // OLD MODEL\n    // const net = await facemesh.load({\n    //   inputResolution: { width: 640, height: 480 },\n    //   scale: 0.8,\n    // });\n    // NEW MODEL\n    const net = await facemesh.load(facemesh.SupportedPackages.mediapipeFacemesh);\n    setInterval(() => {\n      detect(net);\n    }, 10);\n  };\n\n  const detect = async (net) => {\n    if (\n      typeof webcamRef.current !== \"undefined\" &&\n      webcamRef.current !== null &&\n      webcamRef.current.video.readyState === 4\n    ) {\n      // Get Video Properties\n      const video = webcamRef.current.video;\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight;\n\n      // Set video width\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight;\n\n      // Set canvas width\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height = videoHeight;\n\n      // Make Detections\n      // OLD MODEL\n      //       const face = await net.estimateFaces(video);\n      // NEW MODEL\n      const face = await net.estimateFaces({input:video});\n      console.log(face);\n\n      // Get canvas context\n      const ctx = canvasRef.current.getContext(\"2d\");\n      requestAnimationFrame(()=>{drawMesh(face, ctx)});\n    }\n  };\n\n  useEffect(()=>{runFacemesh()}, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Webcam\n          ref={webcamRef}\n          style={{\n            position: \"absolute\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zindex: 9,\n            width: 640,\n            height: 480,\n          }}\n        />\n\n        <canvas\n          ref={canvasRef}\n          style={{\n            position: \"absolute\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zindex: 9,\n            width: 640,\n            height: 480,\n          }}\n        />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/soichirotanaka 1/Documents/gauss/python/ FaceDetection/facemesh/src/reportWebVitals.js",[],"/Users/soichirotanaka 1/Documents/gauss/python/ FaceDetection/facemesh/src/utilities.js",[],{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","severity":1,"message":"29","line":14,"column":13,"nodeType":"30","messageId":"31","endLine":14,"endColumn":15},{"ruleId":"32","severity":1,"message":"33","line":73,"column":34,"nodeType":"34","endLine":73,"endColumn":36,"suggestions":"35"},"no-native-reassign",["36"],"no-negated-in-lhs",["37"],"no-unused-vars","'tf' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'runFacemesh'. Either include it or remove the dependency array.","ArrayExpression",["38"],"no-global-assign","no-unsafe-negation",{"desc":"39","fix":"40"},"Update the dependencies array to be: [runFacemesh]",{"range":"41","text":"42"},[2150,2152],"[runFacemesh]"]